; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\STM32L152D-EVAL\stm32_it.o --asm_dir=.\STM32L152D-EVAL\ --list_dir=.\STM32L152D-EVAL\ --depend=.\STM32L152D-EVAL\stm32_it.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\inc -I..\..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\Utilities\STM32_EVAL\STM32L152D_EVAL -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210E_EVAL ..\src\stm32_it.c]
                          THUMB

                          AREA ||i.BusFault_Handler||, CODE, READONLY, ALIGN=1

                  BusFault_Handler PROC
                  |L1.0|
;;;97     *******************************************************************************/
;;;98     void BusFault_Handler(void)
000000  e7fe              B        |L1.0|
;;;99     {
;;;100      /* Go to infinite loop when Bus Fault exception occurs */
;;;101      while (1)
;;;102      {
;;;103      }
;;;104    }
;;;105    
                          ENDP


                          AREA ||i.DebugMon_Handler||, CODE, READONLY, ALIGN=1

                  DebugMon_Handler PROC
;;;138    *******************************************************************************/
;;;139    void DebugMon_Handler(void)
000000  4770              BX       lr
;;;140    {
;;;141    }
;;;142    
                          ENDP


                          AREA ||i.EXTI9_5_IRQHandler||, CODE, READONLY, ALIGN=1

                  EXTI9_5_IRQHandler PROC
;;;207    #else
;;;208    void EXTI9_5_IRQHandler(void)
000000  4770              BX       lr
;;;209    #endif
;;;210    {
;;;211    
;;;212    }
;;;213    
                          ENDP


                          AREA ||i.HardFault_Handler||, CODE, READONLY, ALIGN=1

                  HardFault_Handler PROC
                  |L4.0|
;;;67     *******************************************************************************/
;;;68     void HardFault_Handler(void)
000000  e7fe              B        |L4.0|
;;;69     {
;;;70       /* Go to infinite loop when Hard Fault exception occurs */
;;;71       while (1)
;;;72       {
;;;73       }
;;;74     }
;;;75     
                          ENDP


                          AREA ||i.MemManage_Handler||, CODE, READONLY, ALIGN=1

                  MemManage_Handler PROC
                  |L5.0|
;;;82     *******************************************************************************/
;;;83     void MemManage_Handler(void)
000000  e7fe              B        |L5.0|
;;;84     {
;;;85       /* Go to infinite loop when Memory Manage exception occurs */
;;;86       while (1)
;;;87       {
;;;88       }
;;;89     }
;;;90     
                          ENDP


                          AREA ||i.NMI_Handler||, CODE, READONLY, ALIGN=1

                  NMI_Handler PROC
;;;56     *******************************************************************************/
;;;57     void NMI_Handler(void)
000000  4770              BX       lr
;;;58     {
;;;59     }
;;;60     
                          ENDP


                          AREA ||i.PendSV_Handler||, CODE, READONLY, ALIGN=1

                  PendSV_Handler PROC
;;;149    *******************************************************************************/
;;;150    void PendSV_Handler(void)
000000  4770              BX       lr
;;;151    {
;;;152    }
;;;153    
                          ENDP


                          AREA ||i.SVC_Handler||, CODE, READONLY, ALIGN=1

                  SVC_Handler PROC
;;;127    *******************************************************************************/
;;;128    void SVC_Handler(void)
000000  4770              BX       lr
;;;129    {
;;;130    }
;;;131    
                          ENDP


                          AREA ||i.SysTick_Handler||, CODE, READONLY, ALIGN=1

                  SysTick_Handler PROC
;;;160    *******************************************************************************/
;;;161    void SysTick_Handler(void)
000000  4770              BX       lr
;;;162    {
;;;163    }
;;;164    
                          ENDP


                          AREA ||i.USBWakeUp_IRQHandler||, CODE, READONLY, ALIGN=1

                  USBWakeUp_IRQHandler PROC
;;;236    *******************************************************************************/
;;;237    void USBWakeUp_IRQHandler(void)
000000  f44f2080          MOV      r0,#0x40000
;;;238    {
;;;239      EXTI_ClearITPendingBit(EXTI_Line18);
000004  f7ffbffe          B.W      EXTI_ClearITPendingBit
;;;240    }
;;;241    #endif /* STM32F10X_CL */
                          ENDP


                          AREA ||i.USB_FS_WKUP_IRQHandler||, CODE, READONLY, ALIGN=1

                  USB_FS_WKUP_IRQHandler PROC
;;;192    *******************************************************************************/
;;;193    void USB_FS_WKUP_IRQHandler(void)
000000  f44f2080          MOV      r0,#0x40000
;;;194    {
;;;195      EXTI_ClearITPendingBit(EXTI_Line18);
000004  f7ffbffe          B.W      EXTI_ClearITPendingBit
;;;196    }
;;;197    
                          ENDP


                          AREA ||i.USB_LP_CAN1_RX0_IRQHandler||, CODE, READONLY, ALIGN=1

                  USB_LP_CAN1_RX0_IRQHandler PROC
;;;179    #else
;;;180    void USB_LP_CAN1_RX0_IRQHandler(void)
000000  f7ffbffe          B.W      USB_Istr
;;;181    #endif
;;;182    {
;;;183      USB_Istr();
;;;184    }
;;;185    #endif /* STM32F10X_CL */
                          ENDP


                          AREA ||i.UsageFault_Handler||, CODE, READONLY, ALIGN=1

                  UsageFault_Handler PROC
                  |L13.0|
;;;112    *******************************************************************************/
;;;113    void UsageFault_Handler(void)
000000  e7fe              B        |L13.0|
;;;114    {
;;;115      /* Go to infinite loop when Usage Fault exception occurs */
;;;116      while (1)
;;;117      {
;;;118      }
;;;119    }
;;;120    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\src\\stm32_it.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___10_stm32_it_c_bb8ca80c____REV16|
#line 114 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_stm32_it_c_bb8ca80c____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___10_stm32_it_c_bb8ca80c____REVSH|
#line 128
|__asm___10_stm32_it_c_bb8ca80c____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
