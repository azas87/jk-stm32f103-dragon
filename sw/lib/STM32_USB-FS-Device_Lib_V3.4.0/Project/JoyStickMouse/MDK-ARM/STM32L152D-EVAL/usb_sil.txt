; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\STM32L152D-EVAL\usb_sil.o --asm_dir=.\STM32L152D-EVAL\ --list_dir=.\STM32L152D-EVAL\ --depend=.\STM32L152D-EVAL\usb_sil.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\inc -I..\..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\Utilities\STM32_EVAL\STM32L152D_EVAL -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210E_EVAL ..\..\..\Libraries\STM32_USB-FS-Device_Driver\src\usb_sil.c]
                          THUMB

                          AREA ||i.USB_SIL_Init||, CODE, READONLY, ALIGN=2

                  USB_SIL_Init PROC
;;;47     *******************************************************************************/
;;;48     uint32_t USB_SIL_Init(void)
000000  4905              LDR      r1,|L1.24|
;;;49     {
;;;50     #ifndef STM32F10X_CL
;;;51       
;;;52       /* USB interrupts initialization */
;;;53       /* clear pending interrupts */
;;;54       _SetISTR(0);
000002  2000              MOVS     r0,#0
000004  6008              STR      r0,[r1,#0]
;;;55       wInterrupt_Mask = IMR_MSK;
000006  4905              LDR      r1,|L1.28|
000008  f44f403f          MOV      r0,#0xbf00
00000c  8008              STRH     r0,[r1,#0]
;;;56       /* set interrupts mask */
;;;57       _SetCNTR(wInterrupt_Mask);
00000e  4902              LDR      r1,|L1.24|
000010  1f09              SUBS     r1,r1,#4
000012  6008              STR      r0,[r1,#0]
;;;58       
;;;59     #else
;;;60       
;;;61       /* Perform OTG Device initialization procedure (including EP0 init) */
;;;62       OTG_DEV_Init();
;;;63       
;;;64     #endif /* STM32F10X_CL */
;;;65     
;;;66       return 0;
000014  2000              MOVS     r0,#0
;;;67     }
000016  4770              BX       lr
;;;68     
                          ENDP

                  |L1.24|
                          DCD      0x40005c44
                  |L1.28|
                          DCD      wInterrupt_Mask

                          AREA ||i.USB_SIL_Read||, CODE, READONLY, ALIGN=1

                  USB_SIL_Read PROC
;;;107    *******************************************************************************/
;;;108    uint32_t USB_SIL_Read(uint8_t bEpAddr, uint8_t* pBufferPointer)
000000  b570              PUSH     {r4-r6,lr}
;;;109    {
;;;110      uint32_t DataLength = 0;
;;;111    
;;;112    #ifndef STM32F10X_CL
;;;113    
;;;114      /* Get the number of received data on the selected Endpoint */
;;;115      DataLength = GetEPRxCount(bEpAddr & 0x7F);
000002  f000067f          AND      r6,r0,#0x7f
000006  460d              MOV      r5,r1                 ;109
000008  4630              MOV      r0,r6
00000a  f7fffffe          BL       GetEPRxCount
00000e  4604              MOV      r4,r0
000010  4630              MOV      r0,r6
;;;116      
;;;117      /* Use the memory interface function to write to the selected endpoint */
;;;118      PMAToUserBufferCopy(pBufferPointer, GetEPRxAddr(bEpAddr & 0x7F), DataLength);
000012  f7fffffe          BL       GetEPRxAddr
000016  4601              MOV      r1,r0
000018  4622              MOV      r2,r4
00001a  4628              MOV      r0,r5
00001c  f7fffffe          BL       PMAToUserBufferCopy
;;;119    
;;;120    #else
;;;121      
;;;122      USB_OTG_EP *ep;
;;;123    
;;;124      /* Get the structure pointer of the selected Endpoint */
;;;125      ep = PCD_GetOutEP(bEpAddr);
;;;126      
;;;127      /* Get the number of received data */
;;;128      DataLength = ep->xfer_len;
;;;129      
;;;130      /* Use the PCD interface layer function to read the selected endpoint */
;;;131      PCD_EP_Read (bEpAddr, pBufferPointer, DataLength);
;;;132      
;;;133    #endif /* STM32F10X_CL */
;;;134    
;;;135      /* Return the number of received data */
;;;136      return DataLength;
000020  4620              MOV      r0,r4
;;;137    }
000022  bd70              POP      {r4-r6,pc}
;;;138    
                          ENDP


                          AREA ||i.USB_SIL_Write||, CODE, READONLY, ALIGN=1

                  USB_SIL_Write PROC
;;;78     *******************************************************************************/
;;;79     uint32_t USB_SIL_Write(uint8_t bEpAddr, uint8_t* pBufferPointer, uint32_t wBufferSize)
000000  b570              PUSH     {r4-r6,lr}
;;;80     {
;;;81     #ifndef STM32F10X_CL
;;;82     
;;;83       /* Use the memory interface function to write to the selected endpoint */
;;;84       UserToPMABufferCopy(pBufferPointer, GetEPTxAddr(bEpAddr & 0x7F), wBufferSize);
000002  f000047f          AND      r4,r0,#0x7f
000006  460d              MOV      r5,r1                 ;80
000008  4616              MOV      r6,r2                 ;80
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       GetEPTxAddr
000010  4601              MOV      r1,r0
000012  b2b2              UXTH     r2,r6
000014  4616              MOV      r6,r2
000016  4628              MOV      r0,r5
000018  f7fffffe          BL       UserToPMABufferCopy
00001c  4631              MOV      r1,r6
00001e  4620              MOV      r0,r4
;;;85     
;;;86       /* Update the data length in the control register */
;;;87       SetEPTxCount((bEpAddr & 0x7F), wBufferSize);
000020  f7fffffe          BL       SetEPTxCount
;;;88       
;;;89     #else
;;;90       
;;;91        /* Use the PCD interface layer function to write to the selected endpoint */
;;;92        PCD_EP_Write (bEpAddr, pBufferPointer, wBufferSize); 
;;;93        
;;;94     #endif /* STM32F10X_CL */
;;;95     
;;;96       return 0;
000024  2000              MOVS     r0,#0
;;;97     }
000026  bd70              POP      {r4-r6,pc}
;;;98     
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\..\\Libraries\\STM32_USB-FS-Device_Driver\\src\\usb_sil.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_usb_sil_c_8614cbb8____REV16|
#line 114 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_usb_sil_c_8614cbb8____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_usb_sil_c_8614cbb8____REVSH|
#line 128
|__asm___9_usb_sil_c_8614cbb8____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
