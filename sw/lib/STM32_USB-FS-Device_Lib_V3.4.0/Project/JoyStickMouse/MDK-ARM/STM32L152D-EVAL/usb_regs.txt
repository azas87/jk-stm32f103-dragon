; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\STM32L152D-EVAL\usb_regs.o --asm_dir=.\STM32L152D-EVAL\ --list_dir=.\STM32L152D-EVAL\ --depend=.\STM32L152D-EVAL\usb_regs.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\inc -I..\..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\Utilities\STM32_EVAL\STM32L152D_EVAL -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210E_EVAL ..\..\..\Libraries\STM32_USB-FS-Device_Driver\src\usb_regs.c]
                          THUMB

                          AREA ||i.ByteSwap||, CODE, READONLY, ALIGN=1

                  ByteSwap PROC
;;;752    *******************************************************************************/
;;;753    uint16_t ByteSwap(uint16_t wSwW)
000000  b2c1              UXTB     r1,r0
;;;754    {
;;;755      uint8_t bTemp;
;;;756      uint16_t wRet;
;;;757      bTemp = (uint8_t)(wSwW & 0xff);
;;;758      wRet =  (wSwW >> 8) | ((uint16_t)bTemp << 8);
000002  0a00              LSRS     r0,r0,#8
000004  ea402001          ORR      r0,r0,r1,LSL #8
;;;759      return(wRet);
;;;760    }
000008  4770              BX       lr
;;;761    
                          ENDP


                          AREA ||i.ClearDTOG_RX||, CODE, READONLY, ALIGN=2

                  ClearDTOG_RX PROC
;;;434    *******************************************************************************/
;;;435    void ClearDTOG_RX(uint8_t bEpNum)
000000  4907              LDR      r1,|L2.32|
;;;436    {
;;;437      _ClearDTOG_RX(bEpNum);
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  6801              LDR      r1,[r0,#0]
000008  0449              LSLS     r1,r1,#17
00000a  d508              BPL      |L2.30|
00000c  6801              LDR      r1,[r0,#0]
00000e  f648728f          MOV      r2,#0x8f8f
000012  b289              UXTH     r1,r1
000014  4011              ANDS     r1,r1,r2
000016  f24c0280          MOV      r2,#0xc080
00001a  4311              ORRS     r1,r1,r2
00001c  6001              STR      r1,[r0,#0]
                  |L2.30|
;;;438    }
00001e  4770              BX       lr
;;;439    /*******************************************************************************
                          ENDP

                  |L2.32|
                          DCD      0x40005c00

                          AREA ||i.ClearDTOG_TX||, CODE, READONLY, ALIGN=2

                  ClearDTOG_TX PROC
;;;445    *******************************************************************************/
;;;446    void ClearDTOG_TX(uint8_t bEpNum)
000000  4907              LDR      r1,|L3.32|
;;;447    {
;;;448      _ClearDTOG_TX(bEpNum);
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  6801              LDR      r1,[r0,#0]
000008  0649              LSLS     r1,r1,#25
00000a  d508              BPL      |L3.30|
00000c  6801              LDR      r1,[r0,#0]
00000e  f648728f          MOV      r2,#0x8f8f
000012  b289              UXTH     r1,r1
000014  4011              ANDS     r1,r1,r2
000016  f24802c0          MOV      r2,#0x80c0
00001a  4311              ORRS     r1,r1,r2
00001c  6001              STR      r1,[r0,#0]
                  |L3.30|
;;;449    }
00001e  4770              BX       lr
;;;450    /*******************************************************************************
                          ENDP

                  |L3.32|
                          DCD      0x40005c00

                          AREA ||i.ClearEPDoubleBuff||, CODE, READONLY, ALIGN=2

                  ClearEPDoubleBuff PROC
;;;357    *******************************************************************************/
;;;358    void ClearEPDoubleBuff(uint8_t bEpNum)
000000  4906              LDR      r1,|L4.28|
;;;359    {
;;;360      _ClearEP_KIND(bEpNum);
000002  eb010180          ADD      r1,r1,r0,LSL #2
000006  6808              LDR      r0,[r1,#0]
000008  f648628f          MOV      r2,#0x8e8f
00000c  b280              UXTH     r0,r0
00000e  4010              ANDS     r0,r0,r2
000010  f2480280          MOV      r2,#0x8080
000014  4310              ORRS     r0,r0,r2
000016  6008              STR      r0,[r1,#0]
;;;361    }
000018  4770              BX       lr
;;;362    /*******************************************************************************
                          ENDP

00001a  0000              DCW      0x0000
                  |L4.28|
                          DCD      0x40005c00

                          AREA ||i.ClearEP_CTR_RX||, CODE, READONLY, ALIGN=2

                  ClearEP_CTR_RX PROC
;;;390    *******************************************************************************/
;;;391    void ClearEP_CTR_RX(uint8_t bEpNum)
000000  4904              LDR      r1,|L5.20|
;;;392    {
;;;393      _ClearEP_CTR_RX(bEpNum);
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  6801              LDR      r1,[r0,#0]
000008  f640728f          MOV      r2,#0xf8f
00000c  b289              UXTH     r1,r1
00000e  4011              ANDS     r1,r1,r2
000010  6001              STR      r1,[r0,#0]
;;;394    }
000012  4770              BX       lr
;;;395    /*******************************************************************************
                          ENDP

                  |L5.20|
                          DCD      0x40005c00

                          AREA ||i.ClearEP_CTR_TX||, CODE, READONLY, ALIGN=2

                  ClearEP_CTR_TX PROC
;;;401    *******************************************************************************/
;;;402    void ClearEP_CTR_TX(uint8_t bEpNum)
000000  4904              LDR      r1,|L6.20|
;;;403    {
;;;404      _ClearEP_CTR_TX(bEpNum);
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  6801              LDR      r1,[r0,#0]
000008  f648720f          MOV      r2,#0x8f0f
00000c  b289              UXTH     r1,r1
00000e  4011              ANDS     r1,r1,r2
000010  6001              STR      r1,[r0,#0]
;;;405    }
000012  4770              BX       lr
;;;406    /*******************************************************************************
                          ENDP

                  |L6.20|
                          DCD      0x40005c00

                          AREA ||i.ClearEP_KIND||, CODE, READONLY, ALIGN=2

                  ClearEP_KIND PROC
;;;313    *******************************************************************************/
;;;314    void ClearEP_KIND(uint8_t bEpNum)
000000  4906              LDR      r1,|L7.28|
;;;315    {
;;;316      _ClearEP_KIND(bEpNum);
000002  eb010180          ADD      r1,r1,r0,LSL #2
000006  6808              LDR      r0,[r1,#0]
000008  f648628f          MOV      r2,#0x8e8f
00000c  b280              UXTH     r0,r0
00000e  4010              ANDS     r0,r0,r2
000010  f2480280          MOV      r2,#0x8080
000014  4310              ORRS     r0,r0,r2
000016  6008              STR      r0,[r1,#0]
;;;317    }
000018  4770              BX       lr
;;;318    /*******************************************************************************
                          ENDP

00001a  0000              DCW      0x0000
                  |L7.28|
                          DCD      0x40005c00

                          AREA ||i.Clear_Status_Out||, CODE, READONLY, ALIGN=2

                  Clear_Status_Out PROC
;;;324    *******************************************************************************/
;;;325    void Clear_Status_Out(uint8_t bEpNum)
000000  4906              LDR      r1,|L8.28|
;;;326    {
;;;327      _ClearEP_KIND(bEpNum);
000002  eb010180          ADD      r1,r1,r0,LSL #2
000006  6808              LDR      r0,[r1,#0]
000008  f648628f          MOV      r2,#0x8e8f
00000c  b280              UXTH     r0,r0
00000e  4010              ANDS     r0,r0,r2
000010  f2480280          MOV      r2,#0x8080
000014  4310              ORRS     r0,r0,r2
000016  6008              STR      r0,[r1,#0]
;;;328    }
000018  4770              BX       lr
;;;329    /*******************************************************************************
                          ENDP

00001a  0000              DCW      0x0000
                  |L8.28|
                          DCD      0x40005c00

                          AREA ||i.FreeUserBuffer||, CODE, READONLY, ALIGN=2

                  FreeUserBuffer PROC
;;;720    *******************************************************************************/
;;;721    void FreeUserBuffer(uint8_t bEpNum, uint8_t bDir)
000000  4b0b              LDR      r3,|L9.48|
;;;722    {
;;;723      if (bDir == EP_DBUF_OUT)
;;;724      { /* OUT double buffered endpoint */
;;;725        _ToggleDTOG_TX(bEpNum);
000002  f648728f          MOV      r2,#0x8f8f
000006  eb030080          ADD      r0,r3,r0,LSL #2
00000a  2901              CMP      r1,#1                 ;723
00000c  d009              BEQ      |L9.34|
;;;726      }
;;;727      else if (bDir == EP_DBUF_IN)
00000e  2902              CMP      r1,#2
000010  d106              BNE      |L9.32|
;;;728      { /* IN double buffered endpoint */
;;;729        _ToggleDTOG_RX(bEpNum);
000012  6801              LDR      r1,[r0,#0]
000014  b289              UXTH     r1,r1
000016  4011              ANDS     r1,r1,r2
000018  f24c0280          MOV      r2,#0xc080
                  |L9.28|
00001c  4311              ORRS     r1,r1,r2              ;725
00001e  6001              STR      r1,[r0,#0]            ;725
                  |L9.32|
;;;730      }
;;;731    }
000020  4770              BX       lr
                  |L9.34|
000022  6801              LDR      r1,[r0,#0]            ;725
000024  b289              UXTH     r1,r1                 ;725
000026  4011              ANDS     r1,r1,r2              ;725
000028  f24802c0          MOV      r2,#0x80c0            ;725
00002c  e7f6              B        |L9.28|
;;;732    
                          ENDP

00002e  0000              DCW      0x0000
                  |L9.48|
                          DCD      0x40005c00

                          AREA ||i.GetBTABLE||, CODE, READONLY, ALIGN=2

                  GetBTABLE PROC
;;;143    *******************************************************************************/
;;;144    uint16_t GetBTABLE(void)
000000  4801              LDR      r0,|L10.8|
;;;145    {
;;;146      return(_GetBTABLE());
000002  6800              LDR      r0,[r0,#0]
000004  b280              UXTH     r0,r0
;;;147    }
000006  4770              BX       lr
;;;148    
                          ENDP

                  |L10.8|
                          DCD      0x40005c50

                          AREA ||i.GetCNTR||, CODE, READONLY, ALIGN=2

                  GetCNTR PROC
;;;59     *******************************************************************************/
;;;60     uint16_t GetCNTR(void)
000000  4801              LDR      r0,|L11.8|
;;;61     {
;;;62       return(_GetCNTR());
000002  6800              LDR      r0,[r0,#0]
000004  b280              UXTH     r0,r0
;;;63     }
000006  4770              BX       lr
;;;64     
                          ENDP

                  |L11.8|
                          DCD      0x40005c40

                          AREA ||i.GetDADDR||, CODE, READONLY, ALIGN=2

                  GetDADDR PROC
;;;119    *******************************************************************************/
;;;120    uint16_t GetDADDR(void)
000000  4801              LDR      r0,|L12.8|
;;;121    {
;;;122      return(_GetDADDR());
000002  6800              LDR      r0,[r0,#0]
000004  b280              UXTH     r0,r0
;;;123    }
000006  4770              BX       lr
;;;124    
                          ENDP

                  |L12.8|
                          DCD      0x40005c4c

                          AREA ||i.GetENDPOINT||, CODE, READONLY, ALIGN=2

                  GetENDPOINT PROC
;;;168    *******************************************************************************/
;;;169    uint16_t GetENDPOINT(uint8_t bEpNum)
000000  4902              LDR      r1,|L13.12|
;;;170    {
;;;171      return(_GetENDPOINT(bEpNum));
000002  f8510020          LDR      r0,[r1,r0,LSL #2]
000006  b280              UXTH     r0,r0
;;;172    }
000008  4770              BX       lr
;;;173    
                          ENDP

00000a  0000              DCW      0x0000
                  |L13.12|
                          DCD      0x40005c00

                          AREA ||i.GetEPAddress||, CODE, READONLY, ALIGN=2

                  GetEPAddress PROC
;;;468    *******************************************************************************/
;;;469    uint8_t GetEPAddress(uint8_t bEpNum)
000000  4902              LDR      r1,|L14.12|
;;;470    {
;;;471      return(_GetEPAddress(bEpNum));
000002  f8510020          LDR      r0,[r1,r0,LSL #2]
000006  f3c00003          UBFX     r0,r0,#0,#4
;;;472    }
00000a  4770              BX       lr
;;;473    /*******************************************************************************
                          ENDP

                  |L14.12|
                          DCD      0x40005c00

                          AREA ||i.GetEPDblBuf0Addr||, CODE, READONLY, ALIGN=2

                  GetEPDblBuf0Addr PROC
;;;620    *******************************************************************************/
;;;621    uint16_t GetEPDblBuf0Addr(uint8_t bEpNum)
000000  4904              LDR      r1,|L15.20|
;;;622    {
;;;623      return(_GetEPDblBuf0Addr(bEpNum));
000002  6809              LDR      r1,[r1,#0]
000004  b289              UXTH     r1,r1
000006  eb0100c0          ADD      r0,r1,r0,LSL #3
00000a  4903              LDR      r1,|L15.24|
00000c  f8510010          LDR      r0,[r1,r0,LSL #1]
000010  b280              UXTH     r0,r0
;;;624    }
000012  4770              BX       lr
;;;625    /*******************************************************************************
                          ENDP

                  |L15.20|
                          DCD      0x40005c50
                  |L15.24|
                          DCD      0x40006000

                          AREA ||i.GetEPDblBuf0Count||, CODE, READONLY, ALIGN=2

                  GetEPDblBuf0Count PROC
;;;679    *******************************************************************************/
;;;680    uint16_t GetEPDblBuf0Count(uint8_t bEpNum)
000000  4905              LDR      r1,|L16.24|
;;;681    {
;;;682      return(_GetEPDblBuf0Count(bEpNum));
000002  6809              LDR      r1,[r1,#0]
000004  b289              UXTH     r1,r1
000006  eb0100c0          ADD      r0,r1,r0,LSL #3
00000a  4904              LDR      r1,|L16.28|
00000c  eb010040          ADD      r0,r1,r0,LSL #1
000010  6840              LDR      r0,[r0,#4]
000012  f3c00009          UBFX     r0,r0,#0,#10
;;;683    }
000016  4770              BX       lr
;;;684    /*******************************************************************************
                          ENDP

                  |L16.24|
                          DCD      0x40005c50
                  |L16.28|
                          DCD      0x40006000

                          AREA ||i.GetEPDblBuf1Addr||, CODE, READONLY, ALIGN=2

                  GetEPDblBuf1Addr PROC
;;;631    *******************************************************************************/
;;;632    uint16_t GetEPDblBuf1Addr(uint8_t bEpNum)
000000  4905              LDR      r1,|L17.24|
;;;633    {
;;;634      return(_GetEPDblBuf1Addr(bEpNum));
000002  6809              LDR      r1,[r1,#0]
000004  b289              UXTH     r1,r1
000006  eb0100c0          ADD      r0,r1,r0,LSL #3
00000a  4904              LDR      r1,|L17.28|
00000c  eb010040          ADD      r0,r1,r0,LSL #1
000010  6880              LDR      r0,[r0,#8]
000012  b280              UXTH     r0,r0
;;;635    }
000014  4770              BX       lr
;;;636    /*******************************************************************************
                          ENDP

000016  0000              DCW      0x0000
                  |L17.24|
                          DCD      0x40005c50
                  |L17.28|
                          DCD      0x40006000

                          AREA ||i.GetEPDblBuf1Count||, CODE, READONLY, ALIGN=2

                  GetEPDblBuf1Count PROC
;;;691    *******************************************************************************/
;;;692    uint16_t GetEPDblBuf1Count(uint8_t bEpNum)
000000  4905              LDR      r1,|L18.24|
;;;693    {
;;;694      return(_GetEPDblBuf1Count(bEpNum));
000002  6809              LDR      r1,[r1,#0]
000004  b289              UXTH     r1,r1
000006  eb0100c0          ADD      r0,r1,r0,LSL #3
00000a  4904              LDR      r1,|L18.28|
00000c  eb010040          ADD      r0,r1,r0,LSL #1
000010  68c0              LDR      r0,[r0,#0xc]
000012  f3c00009          UBFX     r0,r0,#0,#10
;;;695    }
000016  4770              BX       lr
;;;696    /*******************************************************************************
                          ENDP

                  |L18.24|
                          DCD      0x40005c50
                  |L18.28|
                          DCD      0x40006000

                          AREA ||i.GetEPDblBufDir||, CODE, READONLY, ALIGN=2

                  GetEPDblBufDir PROC
;;;703    *******************************************************************************/
;;;704    EP_DBUF_DIR GetEPDblBufDir(uint8_t bEpNum)
000000  490c              LDR      r1,|L19.52|
;;;705    {
;;;706      if ((uint16_t)(*_pEPRxCount(bEpNum) & 0xFC00) != 0)
000002  680a              LDR      r2,[r1,#0]
000004  b292              UXTH     r2,r2
000006  eb0203c0          ADD      r3,r2,r0,LSL #3
00000a  4a0b              LDR      r2,|L19.56|
00000c  eb020343          ADD      r3,r2,r3,LSL #1
000010  68db              LDR      r3,[r3,#0xc]
000012  f4134f7c          TST      r3,#0xfc00
000016  d001              BEQ      |L19.28|
;;;707        return(EP_DBUF_OUT);
000018  2001              MOVS     r0,#1
                  |L19.26|
;;;708      else if (((uint16_t)(*_pEPTxCount(bEpNum)) & 0x03FF) != 0)
;;;709        return(EP_DBUF_IN);
;;;710      else
;;;711        return(EP_DBUF_ERR);
;;;712    }
00001a  4770              BX       lr
                  |L19.28|
00001c  6809              LDR      r1,[r1,#0]            ;708
00001e  b289              UXTH     r1,r1                 ;708
000020  eb0100c0          ADD      r0,r1,r0,LSL #3       ;708
000024  eb020040          ADD      r0,r2,r0,LSL #1       ;708
000028  6840              LDR      r0,[r0,#4]            ;708
00002a  0580              LSLS     r0,r0,#22             ;708
00002c  d0f5              BEQ      |L19.26|
00002e  2002              MOVS     r0,#2                 ;709
000030  4770              BX       lr
;;;713    /*******************************************************************************
                          ENDP

000032  0000              DCW      0x0000
                  |L19.52|
                          DCD      0x40005c50
                  |L19.56|
                          DCD      0x40006000

                          AREA ||i.GetEPRxAddr||, CODE, READONLY, ALIGN=2

                  GetEPRxAddr PROC
;;;514    *******************************************************************************/
;;;515    uint16_t GetEPRxAddr(uint8_t bEpNum)
000000  4905              LDR      r1,|L20.24|
;;;516    {
;;;517      return(_GetEPRxAddr(bEpNum));
000002  6809              LDR      r1,[r1,#0]
000004  b289              UXTH     r1,r1
000006  eb0100c0          ADD      r0,r1,r0,LSL #3
00000a  4904              LDR      r1,|L20.28|
00000c  eb010040          ADD      r0,r1,r0,LSL #1
000010  6880              LDR      r0,[r0,#8]
000012  b280              UXTH     r0,r0
;;;518    }
000014  4770              BX       lr
;;;519    /*******************************************************************************
                          ENDP

000016  0000              DCW      0x0000
                  |L20.24|
                          DCD      0x40005c50
                  |L20.28|
                          DCD      0x40006000

                          AREA ||i.GetEPRxCount||, CODE, READONLY, ALIGN=2

                  GetEPRxCount PROC
;;;572    *******************************************************************************/
;;;573    uint16_t GetEPRxCount(uint8_t bEpNum)
000000  4905              LDR      r1,|L21.24|
;;;574    {
;;;575      return(_GetEPRxCount(bEpNum));
000002  6809              LDR      r1,[r1,#0]
000004  b289              UXTH     r1,r1
000006  eb0100c0          ADD      r0,r1,r0,LSL #3
00000a  4904              LDR      r1,|L21.28|
00000c  eb010040          ADD      r0,r1,r0,LSL #1
000010  68c0              LDR      r0,[r0,#0xc]
000012  f3c00009          UBFX     r0,r0,#0,#10
;;;576    }
000016  4770              BX       lr
;;;577    /*******************************************************************************
                          ENDP

                  |L21.24|
                          DCD      0x40005c50
                  |L21.28|
                          DCD      0x40006000

                          AREA ||i.GetEPRxStatus||, CODE, READONLY, ALIGN=2

                  GetEPRxStatus PROC
;;;265    *******************************************************************************/
;;;266    uint16_t GetEPRxStatus(uint8_t bEpNum)
000000  4903              LDR      r1,|L22.16|
;;;267    {
;;;268      return(_GetEPRxStatus(bEpNum));
000002  f8510020          LDR      r0,[r1,r0,LSL #2]
000006  f3c03001          UBFX     r0,r0,#12,#2
00000a  0300              LSLS     r0,r0,#12
;;;269    }
00000c  4770              BX       lr
;;;270    
                          ENDP

00000e  0000              DCW      0x0000
                  |L22.16|
                          DCD      0x40005c00

                          AREA ||i.GetEPTxAddr||, CODE, READONLY, ALIGN=2

                  GetEPTxAddr PROC
;;;503    *******************************************************************************/
;;;504    uint16_t GetEPTxAddr(uint8_t bEpNum)
000000  4904              LDR      r1,|L23.20|
;;;505    {
;;;506      return(_GetEPTxAddr(bEpNum));
000002  6809              LDR      r1,[r1,#0]
000004  b289              UXTH     r1,r1
000006  eb0100c0          ADD      r0,r1,r0,LSL #3
00000a  4903              LDR      r1,|L23.24|
00000c  f8510010          LDR      r0,[r1,r0,LSL #1]
000010  b280              UXTH     r0,r0
;;;507    }
000012  4770              BX       lr
;;;508    /*******************************************************************************
                          ENDP

                  |L23.20|
                          DCD      0x40005c50
                  |L23.24|
                          DCD      0x40006000

                          AREA ||i.GetEPTxCount||, CODE, READONLY, ALIGN=2

                  GetEPTxCount PROC
;;;561    *******************************************************************************/
;;;562    uint16_t GetEPTxCount(uint8_t bEpNum)
000000  4905              LDR      r1,|L24.24|
;;;563    {
;;;564      return(_GetEPTxCount(bEpNum));
000002  6809              LDR      r1,[r1,#0]
000004  b289              UXTH     r1,r1
000006  eb0100c0          ADD      r0,r1,r0,LSL #3
00000a  4904              LDR      r1,|L24.28|
00000c  eb010040          ADD      r0,r1,r0,LSL #1
000010  6840              LDR      r0,[r0,#4]
000012  f3c00009          UBFX     r0,r0,#0,#10
;;;565    }
000016  4770              BX       lr
;;;566    /*******************************************************************************
                          ENDP

                  |L24.24|
                          DCD      0x40005c50
                  |L24.28|
                          DCD      0x40006000

                          AREA ||i.GetEPTxStatus||, CODE, READONLY, ALIGN=2

                  GetEPTxStatus PROC
;;;253    *******************************************************************************/
;;;254    uint16_t GetEPTxStatus(uint8_t bEpNum)
000000  4903              LDR      r1,|L25.16|
;;;255    {
;;;256      return(_GetEPTxStatus(bEpNum));
000002  f8510020          LDR      r0,[r1,r0,LSL #2]
000006  f3c01001          UBFX     r0,r0,#4,#2
00000a  0100              LSLS     r0,r0,#4
;;;257    }
00000c  4770              BX       lr
;;;258    
                          ENDP

00000e  0000              DCW      0x0000
                  |L25.16|
                          DCD      0x40005c00

                          AREA ||i.GetEPType||, CODE, READONLY, ALIGN=2

                  GetEPType PROC
;;;193    *******************************************************************************/
;;;194    uint16_t GetEPType(uint8_t bEpNum)
000000  4903              LDR      r1,|L26.16|
;;;195    {
;;;196      return(_GetEPType(bEpNum));
000002  f8510020          LDR      r0,[r1,r0,LSL #2]
000006  f3c02041          UBFX     r0,r0,#9,#2
00000a  0240              LSLS     r0,r0,#9
;;;197    }
00000c  4770              BX       lr
;;;198    
                          ENDP

00000e  0000              DCW      0x0000
                  |L26.16|
                          DCD      0x40005c00

                          AREA ||i.GetFNR||, CODE, READONLY, ALIGN=2

                  GetFNR PROC
;;;95     *******************************************************************************/
;;;96     uint16_t GetFNR(void)
000000  4801              LDR      r0,|L27.8|
;;;97     {
;;;98       return(_GetFNR());
000002  6800              LDR      r0,[r0,#0]
000004  b280              UXTH     r0,r0
;;;99     }
000006  4770              BX       lr
;;;100    
                          ENDP

                  |L27.8|
                          DCD      0x40005c48

                          AREA ||i.GetISTR||, CODE, READONLY, ALIGN=2

                  GetISTR PROC
;;;83     *******************************************************************************/
;;;84     uint16_t GetISTR(void)
000000  4801              LDR      r0,|L28.8|
;;;85     {
;;;86       return(_GetISTR());
000002  6800              LDR      r0,[r0,#0]
000004  b280              UXTH     r0,r0
;;;87     }
000006  4770              BX       lr
;;;88     
                          ENDP

                  |L28.8|
                          DCD      0x40005c44

                          AREA ||i.GetRxStallStatus||, CODE, READONLY, ALIGN=2

                  GetRxStallStatus PROC
;;;379    *******************************************************************************/
;;;380    uint16_t GetRxStallStatus(uint8_t bEpNum)
000000  4904              LDR      r1,|L29.20|
;;;381    {
;;;382      return(_GetRxStallStatus(bEpNum));
000002  f8510020          LDR      r0,[r1,r0,LSL #2]
000006  f3c03001          UBFX     r0,r0,#12,#2
00000a  2801              CMP      r0,#1
00000c  d000              BEQ      |L29.16|
00000e  2000              MOVS     r0,#0
                  |L29.16|
;;;383    }
000010  4770              BX       lr
;;;384    /*******************************************************************************
                          ENDP

000012  0000              DCW      0x0000
                  |L29.20|
                          DCD      0x40005c00

                          AREA ||i.GetTxStallStatus||, CODE, READONLY, ALIGN=2

                  GetTxStallStatus PROC
;;;368    *******************************************************************************/
;;;369    uint16_t GetTxStallStatus(uint8_t bEpNum)
000000  4904              LDR      r1,|L30.20|
;;;370    {
;;;371      return(_GetTxStallStatus(bEpNum));
000002  f8510020          LDR      r0,[r1,r0,LSL #2]
000006  f3c01001          UBFX     r0,r0,#4,#2
00000a  2801              CMP      r0,#1
00000c  d000              BEQ      |L30.16|
00000e  2000              MOVS     r0,#0
                  |L30.16|
;;;372    }
000010  4770              BX       lr
;;;373    /*******************************************************************************
                          ENDP

000012  0000              DCW      0x0000
                  |L30.20|
                          DCD      0x40005c00

                          AREA ||i.SetBTABLE||, CODE, READONLY, ALIGN=2

                  SetBTABLE PROC
;;;131    *******************************************************************************/
;;;132    void SetBTABLE(uint16_t wRegValue)
000000  4902              LDR      r1,|L31.12|
;;;133    {
;;;134      _SetBTABLE(wRegValue);
000002  f0200007          BIC      r0,r0,#7
000006  6008              STR      r0,[r1,#0]
;;;135    }
000008  4770              BX       lr
;;;136    
                          ENDP

00000a  0000              DCW      0x0000
                  |L31.12|
                          DCD      0x40005c50

                          AREA ||i.SetCNTR||, CODE, READONLY, ALIGN=2

                  SetCNTR PROC
;;;47     *******************************************************************************/
;;;48     void SetCNTR(uint16_t wRegValue)
000000  4901              LDR      r1,|L32.8|
;;;49     {
;;;50       _SetCNTR(wRegValue);
000002  6008              STR      r0,[r1,#0]
;;;51     }
000004  4770              BX       lr
;;;52     
                          ENDP

000006  0000              DCW      0x0000
                  |L32.8|
                          DCD      0x40005c40

                          AREA ||i.SetDADDR||, CODE, READONLY, ALIGN=2

                  SetDADDR PROC
;;;107    *******************************************************************************/
;;;108    void SetDADDR(uint16_t wRegValue)
000000  4901              LDR      r1,|L33.8|
;;;109    {
;;;110      _SetDADDR(wRegValue);
000002  6008              STR      r0,[r1,#0]
;;;111    }
000004  4770              BX       lr
;;;112    
                          ENDP

000006  0000              DCW      0x0000
                  |L33.8|
                          DCD      0x40005c4c

                          AREA ||i.SetDouBleBuffEPStall||, CODE, READONLY, ALIGN=2

                  SetDouBleBuffEPStall PROC
;;;232    *******************************************************************************/
;;;233    void SetDouBleBuffEPStall(uint8_t bEpNum, uint8_t bDir)
000000  b500              PUSH     {lr}
;;;234    {
000002  460a              MOV      r2,r1
000004  4603              MOV      r3,r0
;;;235      uint16_t Endpoint_DTOG_Status;
;;;236      Endpoint_DTOG_Status = GetENDPOINT(bEpNum);
000006  f7fffffe          BL       GetENDPOINT
;;;237      if (bDir == EP_DBUF_OUT)
;;;238      { /* OUT double buffered endpoint */
;;;239        _SetENDPOINT(bEpNum, Endpoint_DTOG_Status & ~EPRX_DTOG1);
00000a  4907              LDR      r1,|L34.40|
00000c  2a01              CMP      r2,#1                 ;237
00000e  eb010183          ADD      r1,r1,r3,LSL #2
000012  d005              BEQ      |L34.32|
;;;240      }
;;;241      else if (bDir == EP_DBUF_IN)
000014  2a02              CMP      r2,#2
000016  d102              BNE      |L34.30|
;;;242      { /* IN double buffered endpoint */
;;;243        _SetENDPOINT(bEpNum, Endpoint_DTOG_Status & ~EPTX_DTOG1);
000018  f0200010          BIC      r0,r0,#0x10
                  |L34.28|
00001c  6008              STR      r0,[r1,#0]            ;239
                  |L34.30|
;;;244      }
;;;245    }
00001e  bd00              POP      {pc}
                  |L34.32|
000020  f4205080          BIC      r0,r0,#0x1000         ;239
000024  e7fa              B        |L34.28|
;;;246    
                          ENDP

000026  0000              DCW      0x0000
                  |L34.40|
                          DCD      0x40005c00

                          AREA ||i.SetENDPOINT||, CODE, READONLY, ALIGN=2

                  SetENDPOINT PROC
;;;156    *******************************************************************************/
;;;157    void SetENDPOINT(uint8_t bEpNum, uint16_t wRegValue)
000000  4a01              LDR      r2,|L35.8|
;;;158    {
;;;159      _SetENDPOINT(bEpNum, wRegValue);
000002  f8421020          STR      r1,[r2,r0,LSL #2]
;;;160    }
000006  4770              BX       lr
;;;161    
                          ENDP

                  |L35.8|
                          DCD      0x40005c00

                          AREA ||i.SetEPAddress||, CODE, READONLY, ALIGN=2

                  SetEPAddress PROC
;;;457    *******************************************************************************/
;;;458    void SetEPAddress(uint8_t bEpNum, uint8_t bAddr)
000000  4a06              LDR      r2,|L36.28|
;;;459    {
;;;460      _SetEPAddress(bEpNum, bAddr);
000002  eb020280          ADD      r2,r2,r0,LSL #2
000006  6810              LDR      r0,[r2,#0]
000008  f648738f          MOV      r3,#0x8f8f
00000c  b280              UXTH     r0,r0
00000e  4018              ANDS     r0,r0,r3
000010  4308              ORRS     r0,r0,r1
000012  f2480180          MOV      r1,#0x8080
000016  4308              ORRS     r0,r0,r1
000018  6010              STR      r0,[r2,#0]
;;;461    }
00001a  4770              BX       lr
;;;462    /*******************************************************************************
                          ENDP

                  |L36.28|
                          DCD      0x40005c00

                          AREA ||i.SetEPCountRxReg||, CODE, READONLY, ALIGN=1

                  SetEPCountRxReg PROC
;;;538    *******************************************************************************/
;;;539    void SetEPCountRxReg(uint32_t *pdwReg, uint16_t wCount)
000000  293e              CMP      r1,#0x3e
;;;540    {
;;;541      _SetEPCountRxReg(dwReg, wCount);
000002  d909              BLS      |L37.24|
000004  094a              LSRS     r2,r1,#5
000006  06c9              LSLS     r1,r1,#27
000008  d101              BNE      |L37.14|
00000a  1e52              SUBS     r2,r2,#1
00000c  b292              UXTH     r2,r2
                  |L37.14|
00000e  f44f4100          MOV      r1,#0x8000
000012  ea412182          ORR      r1,r1,r2,LSL #10
000016  e005              B        |L37.36|
                  |L37.24|
000018  084a              LSRS     r2,r1,#1
00001a  07c9              LSLS     r1,r1,#31
00001c  d001              BEQ      |L37.34|
00001e  1c52              ADDS     r2,r2,#1
000020  b292              UXTH     r2,r2
                  |L37.34|
000022  0291              LSLS     r1,r2,#10
                  |L37.36|
000024  6001              STR      r1,[r0,#0]
;;;542    }
000026  4770              BX       lr
;;;543    /*******************************************************************************
                          ENDP


                          AREA ||i.SetEPDblBuf0Addr||, CODE, READONLY, ALIGN=2

                  SetEPDblBuf0Addr PROC
;;;597    *******************************************************************************/
;;;598    void SetEPDblBuf0Addr(uint8_t bEpNum, uint16_t wBuf0Addr)
000000  4a05              LDR      r2,|L38.24|
;;;599    {
;;;600      _SetEPDblBuf0Addr(bEpNum, wBuf0Addr);
000002  f0210101          BIC      r1,r1,#1
000006  6812              LDR      r2,[r2,#0]
000008  b292              UXTH     r2,r2
00000a  eb0200c0          ADD      r0,r2,r0,LSL #3
00000e  4a03              LDR      r2,|L38.28|
000010  f8421010          STR      r1,[r2,r0,LSL #1]
;;;601    }
000014  4770              BX       lr
;;;602    /*******************************************************************************
                          ENDP

000016  0000              DCW      0x0000
                  |L38.24|
                          DCD      0x40005c50
                  |L38.28|
                          DCD      0x40006000

                          AREA ||i.SetEPDblBuf0Count||, CODE, READONLY, ALIGN=2

                  SetEPDblBuf0Count PROC
;;;655    *******************************************************************************/
;;;656    void SetEPDblBuf0Count(uint8_t bEpNum, uint8_t bDir, uint16_t wCount)
000000  4b14              LDR      r3,|L39.84|
;;;657    {
;;;658      _SetEPDblBuf0Count(bEpNum, bDir, wCount);
000002  2901              CMP      r1,#1
000004  d00a              BEQ      |L39.28|
000006  2902              CMP      r1,#2
000008  d107              BNE      |L39.26|
00000a  6819              LDR      r1,[r3,#0]
00000c  b289              UXTH     r1,r1
00000e  eb0100c0          ADD      r0,r1,r0,LSL #3
000012  4911              LDR      r1,|L39.88|
000014  eb010040          ADD      r0,r1,r0,LSL #1
000018  6042              STR      r2,[r0,#4]
                  |L39.26|
;;;659    }
00001a  4770              BX       lr
                  |L39.28|
00001c  6819              LDR      r1,[r3,#0]            ;658
00001e  b289              UXTH     r1,r1                 ;658
000020  eb0100c0          ADD      r0,r1,r0,LSL #3       ;658
000024  490c              LDR      r1,|L39.88|
000026  1d09              ADDS     r1,r1,#4              ;658
000028  eb010140          ADD      r1,r1,r0,LSL #1       ;658
00002c  2a3e              CMP      r2,#0x3e              ;658
00002e  d909              BLS      |L39.68|
000030  0950              LSRS     r0,r2,#5              ;658
000032  06d2              LSLS     r2,r2,#27             ;658
000034  d101              BNE      |L39.58|
000036  1e40              SUBS     r0,r0,#1              ;658
000038  b280              UXTH     r0,r0                 ;658
                  |L39.58|
00003a  f44f4200          MOV      r2,#0x8000            ;658
00003e  ea422080          ORR      r0,r2,r0,LSL #10      ;658
000042  e005              B        |L39.80|
                  |L39.68|
000044  0850              LSRS     r0,r2,#1              ;658
000046  07d2              LSLS     r2,r2,#31             ;658
000048  d001              BEQ      |L39.78|
00004a  1c40              ADDS     r0,r0,#1              ;658
00004c  b280              UXTH     r0,r0                 ;658
                  |L39.78|
00004e  0280              LSLS     r0,r0,#10             ;658
                  |L39.80|
000050  6008              STR      r0,[r1,#0]            ;658
000052  4770              BX       lr
;;;660    /*******************************************************************************
                          ENDP

                  |L39.84|
                          DCD      0x40005c50
                  |L39.88|
                          DCD      0x40006000

                          AREA ||i.SetEPDblBuf1Addr||, CODE, READONLY, ALIGN=2

                  SetEPDblBuf1Addr PROC
;;;609    *******************************************************************************/
;;;610    void SetEPDblBuf1Addr(uint8_t bEpNum, uint16_t wBuf1Addr)
000000  4a05              LDR      r2,|L40.24|
;;;611    {
;;;612      _SetEPDblBuf1Addr(bEpNum, wBuf1Addr);
000002  f0210101          BIC      r1,r1,#1
000006  6812              LDR      r2,[r2,#0]
000008  b292              UXTH     r2,r2
00000a  eb0200c0          ADD      r0,r2,r0,LSL #3
00000e  4a03              LDR      r2,|L40.28|
000010  eb020040          ADD      r0,r2,r0,LSL #1
000014  6081              STR      r1,[r0,#8]
;;;613    }
000016  4770              BX       lr
;;;614    /*******************************************************************************
                          ENDP

                  |L40.24|
                          DCD      0x40005c50
                  |L40.28|
                          DCD      0x40006000

                          AREA ||i.SetEPDblBuf1Count||, CODE, READONLY, ALIGN=2

                  SetEPDblBuf1Count PROC
;;;667    *******************************************************************************/
;;;668    void SetEPDblBuf1Count(uint8_t bEpNum, uint8_t bDir, uint16_t wCount)
000000  4b14              LDR      r3,|L41.84|
;;;669    {
;;;670      _SetEPDblBuf1Count(bEpNum, bDir, wCount);
000002  2901              CMP      r1,#1
000004  d00a              BEQ      |L41.28|
000006  2902              CMP      r1,#2
000008  d107              BNE      |L41.26|
00000a  6819              LDR      r1,[r3,#0]
00000c  b289              UXTH     r1,r1
00000e  eb0100c0          ADD      r0,r1,r0,LSL #3
000012  4911              LDR      r1,|L41.88|
000014  eb010040          ADD      r0,r1,r0,LSL #1
000018  60c2              STR      r2,[r0,#0xc]
                  |L41.26|
;;;671    }
00001a  4770              BX       lr
                  |L41.28|
00001c  6819              LDR      r1,[r3,#0]            ;670
00001e  b289              UXTH     r1,r1                 ;670
000020  eb0100c0          ADD      r0,r1,r0,LSL #3       ;670
000024  490c              LDR      r1,|L41.88|
000026  310c              ADDS     r1,r1,#0xc            ;670
000028  eb010140          ADD      r1,r1,r0,LSL #1       ;670
00002c  2a3e              CMP      r2,#0x3e              ;670
00002e  d909              BLS      |L41.68|
000030  0950              LSRS     r0,r2,#5              ;670
000032  06d2              LSLS     r2,r2,#27             ;670
000034  d101              BNE      |L41.58|
000036  1e40              SUBS     r0,r0,#1              ;670
000038  b280              UXTH     r0,r0                 ;670
                  |L41.58|
00003a  f44f4200          MOV      r2,#0x8000            ;670
00003e  ea422080          ORR      r0,r2,r0,LSL #10      ;670
000042  e005              B        |L41.80|
                  |L41.68|
000044  0850              LSRS     r0,r2,#1              ;670
000046  07d2              LSLS     r2,r2,#31             ;670
000048  d001              BEQ      |L41.78|
00004a  1c40              ADDS     r0,r0,#1              ;670
00004c  b280              UXTH     r0,r0                 ;670
                  |L41.78|
00004e  0280              LSLS     r0,r0,#10             ;670
                  |L41.80|
000050  6008              STR      r0,[r1,#0]            ;670
000052  4770              BX       lr
;;;672    /*******************************************************************************
                          ENDP

                  |L41.84|
                          DCD      0x40005c50
                  |L41.88|
                          DCD      0x40006000

                          AREA ||i.SetEPDblBuffAddr||, CODE, READONLY, ALIGN=2

                  SetEPDblBuffAddr PROC
;;;585    *******************************************************************************/
;;;586    void SetEPDblBuffAddr(uint8_t bEpNum, uint16_t wBuf0Addr, uint16_t wBuf1Addr)
000000  b530              PUSH     {r4,r5,lr}
;;;587    {
;;;588      _SetEPDblBuffAddr(bEpNum, wBuf0Addr, wBuf1Addr);
000002  f0210401          BIC      r4,r1,#1
000006  4909              LDR      r1,|L42.44|
000008  680b              LDR      r3,[r1,#0]
00000a  f0220201          BIC      r2,r2,#1
00000e  b29b              UXTH     r3,r3
000010  eb0305c0          ADD      r5,r3,r0,LSL #3
000014  4b06              LDR      r3,|L42.48|
000016  f8434015          STR      r4,[r3,r5,LSL #1]
00001a  6809              LDR      r1,[r1,#0]
00001c  b289              UXTH     r1,r1
00001e  eb0100c0          ADD      r0,r1,r0,LSL #3
000022  eb030040          ADD      r0,r3,r0,LSL #1
000026  6082              STR      r2,[r0,#8]
;;;589    }
000028  bd30              POP      {r4,r5,pc}
;;;590    /*******************************************************************************
                          ENDP

00002a  0000              DCW      0x0000
                  |L42.44|
                          DCD      0x40005c50
                  |L42.48|
                          DCD      0x40006000

                          AREA ||i.SetEPDblBuffCount||, CODE, READONLY, ALIGN=2

                  SetEPDblBuffCount PROC
;;;643    *******************************************************************************/
;;;644    void SetEPDblBuffCount(uint8_t bEpNum, uint8_t bDir, uint16_t wCount)
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;645    {
;;;646      _SetEPDblBuffCount(bEpNum, bDir, wCount);
000004  4b27              LDR      r3,|L43.164|
000006  2901              CMP      r1,#1
000008  d012              BEQ      |L43.48|
00000a  2902              CMP      r1,#2
00000c  d10e              BNE      |L43.44|
00000e  6819              LDR      r1,[r3,#0]
000010  b289              UXTH     r1,r1
000012  eb0104c0          ADD      r4,r1,r0,LSL #3
000016  4924              LDR      r1,|L43.168|
000018  eb010444          ADD      r4,r1,r4,LSL #1
00001c  6062              STR      r2,[r4,#4]
00001e  681b              LDR      r3,[r3,#0]
000020  b29b              UXTH     r3,r3
000022  eb0300c0          ADD      r0,r3,r0,LSL #3
000026  eb010040          ADD      r0,r1,r0,LSL #1
00002a  60c2              STR      r2,[r0,#0xc]
                  |L43.44|
;;;647    }
00002c  e8bd83f0          POP      {r4-r9,pc}
                  |L43.48|
000030  6819              LDR      r1,[r3,#0]            ;646
000032  4699              MOV      r9,r3                 ;646
000034  4b1c              LDR      r3,|L43.168|
000036  b289              UXTH     r1,r1                 ;646
000038  eb0101c0          ADD      r1,r1,r0,LSL #3       ;646
00003c  1d1b              ADDS     r3,r3,#4              ;646
00003e  eb030641          ADD      r6,r3,r1,LSL #1       ;646
000042  0953              LSRS     r3,r2,#5              ;646
000044  0851              LSRS     r1,r2,#1              ;646
000046  1e5c              SUBS     r4,r3,#1              ;646
000048  f44f4700          MOV      r7,#0x8000            ;646
00004c  f1010801          ADD      r8,r1,#1              ;646
000050  2a3e              CMP      r2,#0x3e              ;646
000052  d907              BLS      |L43.100|
000054  461d              MOV      r5,r3                 ;646
000056  ea5f6cc2          LSLS     r12,r2,#27            ;646
00005a  d100              BNE      |L43.94|
00005c  b2a5              UXTH     r5,r4                 ;646
                  |L43.94|
00005e  ea472585          ORR      r5,r7,r5,LSL #10      ;646
000062  e006              B        |L43.114|
                  |L43.100|
000064  07d5              LSLS     r5,r2,#31             ;646
000066  d003              BEQ      |L43.112|
000068  ea4f4508          LSL      r5,r8,#16             ;646
00006c  09ad              LSRS     r5,r5,#6              ;646
00006e  e000              B        |L43.114|
                  |L43.112|
000070  028d              LSLS     r5,r1,#10             ;646
                  |L43.114|
000072  6035              STR      r5,[r6,#0]            ;646
000074  f8d95000          LDR      r5,[r9,#0]            ;646
000078  b2ad              UXTH     r5,r5                 ;646
00007a  eb0500c0          ADD      r0,r5,r0,LSL #3       ;646
00007e  4d0a              LDR      r5,|L43.168|
000080  350c              ADDS     r5,r5,#0xc            ;646
000082  eb050040          ADD      r0,r5,r0,LSL #1       ;646
000086  2a3e              CMP      r2,#0x3e              ;646
000088  d905              BLS      |L43.150|
00008a  06d1              LSLS     r1,r2,#27             ;646
00008c  d100              BNE      |L43.144|
00008e  b2a3              UXTH     r3,r4                 ;646
                  |L43.144|
000090  ea472183          ORR      r1,r7,r3,LSL #10      ;646
000094  e004              B        |L43.160|
                  |L43.150|
000096  07d2              LSLS     r2,r2,#31             ;646
000098  d001              BEQ      |L43.158|
00009a  fa1ff188          UXTH     r1,r8                 ;646
                  |L43.158|
00009e  0289              LSLS     r1,r1,#10             ;646
                  |L43.160|
0000a0  6001              STR      r1,[r0,#0]            ;646
0000a2  e7c3              B        |L43.44|
;;;648    /*******************************************************************************
                          ENDP

                  |L43.164|
                          DCD      0x40005c50
                  |L43.168|
                          DCD      0x40006000

                          AREA ||i.SetEPDoubleBuff||, CODE, READONLY, ALIGN=2

                  SetEPDoubleBuff PROC
;;;346    *******************************************************************************/
;;;347    void SetEPDoubleBuff(uint8_t bEpNum)
000000  4906              LDR      r1,|L44.28|
;;;348    {
;;;349      _SetEP_KIND(bEpNum);
000002  eb010180          ADD      r1,r1,r0,LSL #2
000006  6808              LDR      r0,[r1,#0]
000008  f648728f          MOV      r2,#0x8f8f
00000c  b280              UXTH     r0,r0
00000e  4010              ANDS     r0,r0,r2
000010  f2481280          MOV      r2,#0x8180
000014  4310              ORRS     r0,r0,r2
000016  6008              STR      r0,[r1,#0]
;;;350    }
000018  4770              BX       lr
;;;351    /*******************************************************************************
                          ENDP

00001a  0000              DCW      0x0000
                  |L44.28|
                          DCD      0x40005c00

                          AREA ||i.SetEPRxAddr||, CODE, READONLY, ALIGN=2

                  SetEPRxAddr PROC
;;;492    *******************************************************************************/
;;;493    void SetEPRxAddr(uint8_t bEpNum, uint16_t wAddr)
000000  4a05              LDR      r2,|L45.24|
;;;494    {
;;;495      _SetEPRxAddr(bEpNum, wAddr);
000002  f0210101          BIC      r1,r1,#1
000006  6812              LDR      r2,[r2,#0]
000008  b292              UXTH     r2,r2
00000a  eb0200c0          ADD      r0,r2,r0,LSL #3
00000e  4a03              LDR      r2,|L45.28|
000010  eb020040          ADD      r0,r2,r0,LSL #1
000014  6081              STR      r1,[r0,#8]
;;;496    }
000016  4770              BX       lr
;;;497    /*******************************************************************************
                          ENDP

                  |L45.24|
                          DCD      0x40005c50
                  |L45.28|
                          DCD      0x40006000

                          AREA ||i.SetEPRxCount||, CODE, READONLY, ALIGN=2

                  SetEPRxCount PROC
;;;550    *******************************************************************************/
;;;551    void SetEPRxCount(uint8_t bEpNum, uint16_t wCount)
000000  4a0d              LDR      r2,|L46.56|
;;;552    {
;;;553      _SetEPRxCount(bEpNum, wCount);
000002  6812              LDR      r2,[r2,#0]
000004  293e              CMP      r1,#0x3e
000006  b292              UXTH     r2,r2
000008  eb0200c0          ADD      r0,r2,r0,LSL #3
00000c  4a0b              LDR      r2,|L46.60|
00000e  eb020240          ADD      r2,r2,r0,LSL #1
000012  d909              BLS      |L46.40|
000014  0948              LSRS     r0,r1,#5
000016  06c9              LSLS     r1,r1,#27
000018  d101              BNE      |L46.30|
00001a  1e40              SUBS     r0,r0,#1
00001c  b280              UXTH     r0,r0
                  |L46.30|
00001e  f44f4100          MOV      r1,#0x8000
000022  ea412080          ORR      r0,r1,r0,LSL #10
000026  e005              B        |L46.52|
                  |L46.40|
000028  0848              LSRS     r0,r1,#1
00002a  07c9              LSLS     r1,r1,#31
00002c  d001              BEQ      |L46.50|
00002e  1c40              ADDS     r0,r0,#1
000030  b280              UXTH     r0,r0
                  |L46.50|
000032  0280              LSLS     r0,r0,#10
                  |L46.52|
000034  6010              STR      r0,[r2,#0]
;;;554    }
000036  4770              BX       lr
;;;555    /*******************************************************************************
                          ENDP

                  |L46.56|
                          DCD      0x40005c50
                  |L46.60|
                          DCD      0x4000600c

                          AREA ||i.SetEPRxStatus||, CODE, READONLY, ALIGN=2

                  SetEPRxStatus PROC
;;;219    *******************************************************************************/
;;;220    void SetEPRxStatus(uint8_t bEpNum, uint16_t wState)
000000  4a0a              LDR      r2,|L47.44|
;;;221    {
;;;222      _SetEPRxStatus(bEpNum, wState);
000002  eb020280          ADD      r2,r2,r0,LSL #2
000006  6810              LDR      r0,[r2,#0]
000008  f64b738f          MOV      r3,#0xbf8f
00000c  b280              UXTH     r0,r0
00000e  ea000003          AND      r0,r0,r3
000012  04cb              LSLS     r3,r1,#19
000014  d501              BPL      |L47.26|
000016  f4805080          EOR      r0,r0,#0x1000
                  |L47.26|
00001a  0489              LSLS     r1,r1,#18
00001c  d501              BPL      |L47.34|
00001e  f4805000          EOR      r0,r0,#0x2000
                  |L47.34|
000022  f2480180          MOV      r1,#0x8080
000026  4308              ORRS     r0,r0,r1
000028  6010              STR      r0,[r2,#0]
;;;223    }
00002a  4770              BX       lr
;;;224    
                          ENDP

                  |L47.44|
                          DCD      0x40005c00

                          AREA ||i.SetEPRxValid||, CODE, READONLY, ALIGN=2

                  SetEPRxValid PROC
;;;289    *******************************************************************************/
;;;290    void SetEPRxValid(uint8_t bEpNum)
000000  4907              LDR      r1,|L48.32|
;;;291    {
;;;292      _SetEPRxStatus(bEpNum, EP_RX_VALID);
000002  eb010180          ADD      r1,r1,r0,LSL #2
000006  6808              LDR      r0,[r1,#0]
000008  f64b728f          MOV      r2,#0xbf8f
00000c  b280              UXTH     r0,r0
00000e  4010              ANDS     r0,r0,r2
000010  f4805040          EOR      r0,r0,#0x3000
000014  f2480280          MOV      r2,#0x8080
000018  4310              ORRS     r0,r0,r2
00001a  6008              STR      r0,[r1,#0]
;;;293    }
00001c  4770              BX       lr
;;;294    
                          ENDP

00001e  0000              DCW      0x0000
                  |L48.32|
                          DCD      0x40005c00

                          AREA ||i.SetEPTxAddr||, CODE, READONLY, ALIGN=2

                  SetEPTxAddr PROC
;;;480    *******************************************************************************/
;;;481    void SetEPTxAddr(uint8_t bEpNum, uint16_t wAddr)
000000  4a05              LDR      r2,|L49.24|
;;;482    {
;;;483      _SetEPTxAddr(bEpNum, wAddr);
000002  f0210101          BIC      r1,r1,#1
000006  6812              LDR      r2,[r2,#0]
000008  b292              UXTH     r2,r2
00000a  eb0200c0          ADD      r0,r2,r0,LSL #3
00000e  4a03              LDR      r2,|L49.28|
000010  f8421010          STR      r1,[r2,r0,LSL #1]
;;;484    }
000014  4770              BX       lr
;;;485    /*******************************************************************************
                          ENDP

000016  0000              DCW      0x0000
                  |L49.24|
                          DCD      0x40005c50
                  |L49.28|
                          DCD      0x40006000

                          AREA ||i.SetEPTxCount||, CODE, READONLY, ALIGN=2

                  SetEPTxCount PROC
;;;526    *******************************************************************************/
;;;527    void SetEPTxCount(uint8_t bEpNum, uint16_t wCount)
000000  4a04              LDR      r2,|L50.20|
;;;528    {
;;;529      _SetEPTxCount(bEpNum, wCount);
000002  6812              LDR      r2,[r2,#0]
000004  b292              UXTH     r2,r2
000006  eb0200c0          ADD      r0,r2,r0,LSL #3
00000a  4a03              LDR      r2,|L50.24|
00000c  eb020040          ADD      r0,r2,r0,LSL #1
000010  6041              STR      r1,[r0,#4]
;;;530    }
000012  4770              BX       lr
;;;531    /*******************************************************************************
                          ENDP

                  |L50.20|
                          DCD      0x40005c50
                  |L50.24|
                          DCD      0x40006000

                          AREA ||i.SetEPTxStatus||, CODE, READONLY, ALIGN=2

                  SetEPTxStatus PROC
;;;206    *******************************************************************************/
;;;207    void SetEPTxStatus(uint8_t bEpNum, uint16_t wState)
000000  4a0a              LDR      r2,|L51.44|
;;;208    {
;;;209      _SetEPTxStatus(bEpNum, wState);
000002  eb020280          ADD      r2,r2,r0,LSL #2
000006  6810              LDR      r0,[r2,#0]
000008  f64873bf          MOV      r3,#0x8fbf
00000c  b280              UXTH     r0,r0
00000e  ea000003          AND      r0,r0,r3
000012  06cb              LSLS     r3,r1,#27
000014  d501              BPL      |L51.26|
000016  f0800010          EOR      r0,r0,#0x10
                  |L51.26|
00001a  0689              LSLS     r1,r1,#26
00001c  d501              BPL      |L51.34|
00001e  f0800020          EOR      r0,r0,#0x20
                  |L51.34|
000022  f2480180          MOV      r1,#0x8080
000026  4308              ORRS     r0,r0,r1
000028  6010              STR      r0,[r2,#0]
;;;210    }
00002a  4770              BX       lr
;;;211    
                          ENDP

                  |L51.44|
                          DCD      0x40005c00

                          AREA ||i.SetEPTxValid||, CODE, READONLY, ALIGN=2

                  SetEPTxValid PROC
;;;277    *******************************************************************************/
;;;278    void SetEPTxValid(uint8_t bEpNum)
000000  4907              LDR      r1,|L52.32|
;;;279    {
;;;280      _SetEPTxStatus(bEpNum, EP_TX_VALID);
000002  eb010180          ADD      r1,r1,r0,LSL #2
000006  6808              LDR      r0,[r1,#0]
000008  f64872bf          MOV      r2,#0x8fbf
00000c  b280              UXTH     r0,r0
00000e  4010              ANDS     r0,r0,r2
000010  f0800030          EOR      r0,r0,#0x30
000014  f2480280          MOV      r2,#0x8080
000018  4310              ORRS     r0,r0,r2
00001a  6008              STR      r0,[r1,#0]
;;;281    }
00001c  4770              BX       lr
;;;282    
                          ENDP

00001e  0000              DCW      0x0000
                  |L52.32|
                          DCD      0x40005c00

                          AREA ||i.SetEPType||, CODE, READONLY, ALIGN=2

                  SetEPType PROC
;;;181    *******************************************************************************/
;;;182    void SetEPType(uint8_t bEpNum, uint16_t wType)
000000  4a05              LDR      r2,|L53.24|
;;;183    {
;;;184      _SetEPType(bEpNum, wType);
000002  eb020080          ADD      r0,r2,r0,LSL #2
000006  6802              LDR      r2,[r0,#0]
000008  f648138f          MOV      r3,#0x898f
00000c  b292              UXTH     r2,r2
00000e  401a              ANDS     r2,r2,r3
000010  430a              ORRS     r2,r2,r1
000012  6002              STR      r2,[r0,#0]
;;;185    }
000014  4770              BX       lr
;;;186    
                          ENDP

000016  0000              DCW      0x0000
                  |L53.24|
                          DCD      0x40005c00

                          AREA ||i.SetEP_KIND||, CODE, READONLY, ALIGN=2

                  SetEP_KIND PROC
;;;301    *******************************************************************************/
;;;302    void SetEP_KIND(uint8_t bEpNum)
000000  4906              LDR      r1,|L54.28|
;;;303    {
;;;304      _SetEP_KIND(bEpNum);
000002  eb010180          ADD      r1,r1,r0,LSL #2
000006  6808              LDR      r0,[r1,#0]
000008  f648728f          MOV      r2,#0x8f8f
00000c  b280              UXTH     r0,r0
00000e  4010              ANDS     r0,r0,r2
000010  f2481280          MOV      r2,#0x8180
000014  4310              ORRS     r0,r0,r2
000016  6008              STR      r0,[r1,#0]
;;;305    }
000018  4770              BX       lr
;;;306    
                          ENDP

00001a  0000              DCW      0x0000
                  |L54.28|
                          DCD      0x40005c00

                          AREA ||i.SetISTR||, CODE, READONLY, ALIGN=2

                  SetISTR PROC
;;;71     *******************************************************************************/
;;;72     void SetISTR(uint16_t wRegValue)
000000  4901              LDR      r1,|L55.8|
;;;73     {
;;;74       _SetISTR(wRegValue);
000002  6008              STR      r0,[r1,#0]
;;;75     }
000004  4770              BX       lr
;;;76     
                          ENDP

000006  0000              DCW      0x0000
                  |L55.8|
                          DCD      0x40005c44

                          AREA ||i.Set_Status_Out||, CODE, READONLY, ALIGN=2

                  Set_Status_Out PROC
;;;335    *******************************************************************************/
;;;336    void Set_Status_Out(uint8_t bEpNum)
000000  4906              LDR      r1,|L56.28|
;;;337    {
;;;338      _SetEP_KIND(bEpNum);
000002  eb010180          ADD      r1,r1,r0,LSL #2
000006  6808              LDR      r0,[r1,#0]
000008  f648728f          MOV      r2,#0x8f8f
00000c  b280              UXTH     r0,r0
00000e  4010              ANDS     r0,r0,r2
000010  f2481280          MOV      r2,#0x8180
000014  4310              ORRS     r0,r0,r2
000016  6008              STR      r0,[r1,#0]
;;;339    }
000018  4770              BX       lr
;;;340    /*******************************************************************************
                          ENDP

00001a  0000              DCW      0x0000
                  |L56.28|
                          DCD      0x40005c00

                          AREA ||i.ToWord||, CODE, READONLY, ALIGN=1

                  ToWord PROC
;;;739    *******************************************************************************/
;;;740    uint16_t ToWord(uint8_t bh, uint8_t bl)
000000  ea412000          ORR      r0,r1,r0,LSL #8
;;;741    {
;;;742      uint16_t wRet;
;;;743      wRet = (uint16_t)bl | ((uint16_t)bh << 8);
;;;744      return(wRet);
;;;745    }
000004  4770              BX       lr
;;;746    /*******************************************************************************
                          ENDP


                          AREA ||i.ToggleDTOG_RX||, CODE, READONLY, ALIGN=2

                  ToggleDTOG_RX PROC
;;;412    *******************************************************************************/
;;;413    void ToggleDTOG_RX(uint8_t bEpNum)
000000  4906              LDR      r1,|L58.28|
;;;414    {
;;;415      _ToggleDTOG_RX(bEpNum);
000002  eb010180          ADD      r1,r1,r0,LSL #2
000006  6808              LDR      r0,[r1,#0]
000008  f648728f          MOV      r2,#0x8f8f
00000c  b280              UXTH     r0,r0
00000e  4010              ANDS     r0,r0,r2
000010  f24c0280          MOV      r2,#0xc080
000014  4310              ORRS     r0,r0,r2
000016  6008              STR      r0,[r1,#0]
;;;416    }
000018  4770              BX       lr
;;;417    /*******************************************************************************
                          ENDP

00001a  0000              DCW      0x0000
                  |L58.28|
                          DCD      0x40005c00

                          AREA ||i.ToggleDTOG_TX||, CODE, READONLY, ALIGN=2

                  ToggleDTOG_TX PROC
;;;423    *******************************************************************************/
;;;424    void ToggleDTOG_TX(uint8_t bEpNum)
000000  4906              LDR      r1,|L59.28|
;;;425    {
;;;426      _ToggleDTOG_TX(bEpNum);
000002  eb010180          ADD      r1,r1,r0,LSL #2
000006  6808              LDR      r0,[r1,#0]
000008  f648728f          MOV      r2,#0x8f8f
00000c  b280              UXTH     r0,r0
00000e  4010              ANDS     r0,r0,r2
000010  f24802c0          MOV      r2,#0x80c0
000014  4310              ORRS     r0,r0,r2
000016  6008              STR      r0,[r1,#0]
;;;427    }
000018  4770              BX       lr
;;;428    /*******************************************************************************
                          ENDP

00001a  0000              DCW      0x0000
                  |L59.28|
                          DCD      0x40005c00

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\Libraries\\STM32_USB-FS-Device_Driver\\src\\usb_regs.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___10_usb_regs_c_SetCNTR____REV16|
#line 114 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_usb_regs_c_SetCNTR____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___10_usb_regs_c_SetCNTR____REVSH|
#line 128
|__asm___10_usb_regs_c_SetCNTR____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
